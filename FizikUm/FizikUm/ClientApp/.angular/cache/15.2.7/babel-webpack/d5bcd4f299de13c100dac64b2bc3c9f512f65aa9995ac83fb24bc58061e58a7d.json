{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ResourceComponent {\n  constructor(http) {\n    this.http = http;\n    this.resources = [];\n    this.newResource = {\n      resourceId: 0,\n      name: '',\n      description: '',\n      subjectCategory: {\n        subjectCategoryId: 0,\n        name: ''\n      },\n      classroomId: 0,\n      classroom: {\n        classroomId: 0,\n        subjectCategoryId: 0,\n        subjectCategory: {\n          subjectCategoryId: 0,\n          name: ''\n        },\n        resources: []\n      },\n      code: ''\n    };\n    this.currentView = 'index';\n    this.apiUrl = 'http://localhost:5297/Resource/api';\n  }\n  ngOnInit() {\n    this.getResources();\n  }\n  showView(view, resource) {\n    // No direct equivalent action for showView in this context.\n  }\n  getResources() {\n    this.http.get(`${this.apiUrl}GetResources`).subscribe(result => this.resources = result);\n  }\n  addResource() {\n    this.http.post(`${this.apiUrl}PostResource`, this.newResource).subscribe(result => {\n      this.resources.push(result);\n      this.resetNewResource();\n    }, error => console.error(error));\n  }\n  updateResource(id, resource) {\n    this.http.put(`${this.apiUrl}PutResource/${id}`, resource).subscribe(() => {\n      // Optional: Handle success, e.g., show a message\n    }, error => console.error(error));\n  }\n  deleteResource(id) {\n    this.http.delete(`${this.apiUrl}DeleteResource/${id}`).subscribe(() => {\n      this.resources = this.resources.filter(r => r.resourceId !== id);\n    }, error => console.error(error));\n  }\n  resetNewResource() {\n    this.newResource = {\n      resourceId: 0,\n      name: '',\n      description: '',\n      subjectCategory: {\n        subjectCategoryId: 0,\n        name: ''\n      },\n      classroomId: 0,\n      classroom: {\n        classroomId: 0,\n        subjectCategoryId: 0,\n        subjectCategory: {\n          subjectCategoryId: 0,\n          name: ''\n        },\n        resources: []\n      },\n      code: ''\n    };\n  }\n}\nResourceComponent.ɵfac = function ResourceComponent_Factory(t) {\n  return new (t || ResourceComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nResourceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ResourceComponent,\n  selectors: [[\"app-resource\"]],\n  decls: 2,\n  vars: 0,\n  template: function ResourceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"resource works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["ResourceComponent","constructor","http","resourceId","name","description","subjectCategory","subjectCategoryId","classroomId","classroom","resources","code","ngOnInit","getResources","showView","view","resource","get","apiUrl","subscribe","result","addResource","post","newResource","push","resetNewResource","error","console","updateResource","id","put","deleteResource","delete","filter","r","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["D:\\FizikUm\\FizikUm\\FizikUm\\ClientApp\\src\\app\\resource\\resource.component.ts","D:\\FizikUm\\FizikUm\\FizikUm\\ClientApp\\src\\app\\resource\\resource.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-resource',\n  templateUrl: './resource.component.html',\n  styleUrls: ['./resource.component.css']\n})\nexport class ResourceComponent implements OnInit {\n  public resources: Resource[] = [];\n  public newResource: Resource = {\n    resourceId: 0,\n    name: '',\n    description: '',\n    subjectCategory: { subjectCategoryId: 0, name: '' },\n    classroomId: 0,\n    classroom: { classroomId: 0, subjectCategoryId: 0, subjectCategory: { subjectCategoryId: 0, name: '' }, resources: [] },\n    code: ''\n  };\n  currentView: string = 'index';\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getResources();\n  }\n\n  showView(view: string, resource?: Resource) {\n    // No direct equivalent action for showView in this context.\n  }\n\n  private apiUrl = 'http://localhost:5297/Resource/api'; \n\n  getResources() {\n    this.http.get<Resource[]>(`${this.apiUrl}GetResources`).subscribe(\n      result => this.resources = result);\n  }\n\n  addResource() {\n    this.http.post<Resource>(`${this.apiUrl}PostResource`, this.newResource).subscribe(\n      result => {\n        this.resources.push(result);\n        this.resetNewResource();\n      },\n      error => console.error(error)\n    );\n  }\n\n  updateResource(id: number, resource: Resource) {\n    this.http.put(`${this.apiUrl}PutResource/${id}`, resource).subscribe(\n      () => {\n        // Optional: Handle success, e.g., show a message\n      },\n      error => console.error(error)\n    );\n  }\n\n  deleteResource(id: number) {\n    this.http.delete(`${this.apiUrl}DeleteResource/${id}`).subscribe(\n      () => {\n        this.resources = this.resources.filter(r => r.resourceId !== id);\n      },\n      error => console.error(error)\n    );\n  }\n\n  private resetNewResource() {\n    this.newResource = {\n      resourceId: 0,\n      name: '',\n      description: '',\n      subjectCategory: { subjectCategoryId: 0, name: '' },\n      classroomId: 0,\n      classroom: { classroomId: 0, subjectCategoryId: 0, subjectCategory: { subjectCategoryId: 0, name: '' }, resources: [] },\n      code: ''\n    };\n  }\n}\n\ninterface Resource {\n  resourceId: number;\n  name: string;\n  description: string;\n  subjectCategory: SubjectCategory;\n  classroomId: number;\n  classroom: Classroom;\n  code: string;\n}\n\ninterface SubjectCategory {\n  subjectCategoryId: number;\n  name: string;\n}\n\ninterface Classroom {\n  classroomId: number;\n  subjectCategoryId: number;\n  subjectCategory: SubjectCategory;\n  resources: Resource[];\n}\n","<p>resource works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}