{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction SubjectCategoryComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.successMessage, \" \");\n  }\n}\nfunction SubjectCategoryComponent_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r2.name, \" \");\n  }\n}\nexport class SubjectCategoryComponent {\n  constructor(http) {\n    this.http = http;\n    this.subjectCategories = [];\n    this.newSubjectCategory = {\n      subjectCategoryId: 0,\n      name: ''\n    };\n    this.successMessage = '';\n  }\n  ngOnInit() {\n    this.getSubjectCategories();\n  }\n  getSubjectCategories() {\n    this.http.get('/subjectcategory').subscribe(data => this.subjectCategories = data);\n  }\n  getSubjectCategory(id) {\n    this.http.get(`/subjectcategory/${id}`).subscribe(data => console.log(data)); // Handle the data as needed\n  }\n\n  addSubjectCategory() {\n    this.http.post('/subjectcategory', this.newSubjectCategory).subscribe(data => {\n      this.subjectCategories.push(data);\n      this.newSubjectCategory = {\n        subjectCategoryId: 0,\n        name: ''\n      }; // Reinitialize for the next entry\n    });\n  }\n\n  updateSubjectCategory(id, subjectCategory) {\n    this.http.put(`/subjectcategory/${id}`, subjectCategory).subscribe(() => {\n      // Handle success, if needed\n    });\n  }\n}\nSubjectCategoryComponent.ɵfac = function SubjectCategoryComponent_Factory(t) {\n  return new (t || SubjectCategoryComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nSubjectCategoryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SubjectCategoryComponent,\n  selectors: [[\"app-subject-category\"]],\n  decls: 15,\n  vars: 3,\n  consts: [[\"class\", \"success-message\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [1, \"success-message\"]],\n  template: function SubjectCategoryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Subject Categories\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, SubjectCategoryComponent_div_3_Template, 2, 1, \"div\", 0);\n      i0.ɵɵelementStart(4, \"ul\");\n      i0.ɵɵtemplate(5, SubjectCategoryComponent_li_5_Template, 2, 1, \"li\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\")(7, \"h3\");\n      i0.ɵɵtext(8, \"Add New Subject Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function SubjectCategoryComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.addSubjectCategory();\n      });\n      i0.ɵɵelementStart(10, \"label\", 3);\n      i0.ɵɵtext(11, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function SubjectCategoryComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.newSubjectCategory.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 5);\n      i0.ɵɵtext(14, \"Add Category\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.subjectCategories);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.newSubjectCategory.name);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIEA,8BAAoD;IAClDA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,sDACF;;;;;IAIEA,0BAA+C;IAC7CA,YACF;IAAAA,iBAAK;;;;IADHA,eACF;IADEA,iDACF;;;ACJJ,OAAM,MAAOC,wBAAwB;EAMnCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJxB,sBAAiB,GAAsB,EAAE;IACzC,uBAAkB,GAAoB;MAAEC,iBAAiB,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAE,CAAE;IACxE,mBAAc,GAAW,EAAE;EAEa;EAExCC,QAAQ;IACN,IAAI,CAACC,oBAAoB,EAAE;EAC7B;EAEAA,oBAAoB;IAClB,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAoB,kBAAkB,CAAC,CACjDC,SAAS,CAACC,IAAI,IAAI,IAAI,CAACC,iBAAiB,GAAGD,IAAI,CAAC;EACrD;EAEAE,kBAAkB,CAACC,EAAU;IAC3B,IAAI,CAACV,IAAI,CAACK,GAAG,CAAkB,oBAAoBK,EAAE,EAAE,CAAC,CACrDJ,SAAS,CAACC,IAAI,IAAII,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC;EAC3C;;EAEAM,kBAAkB;IAChB,IAAI,CAACb,IAAI,CAACc,IAAI,CAAkB,kBAAkB,EAAE,IAAI,CAACC,kBAAkB,CAAC,CACzET,SAAS,CAACC,IAAI,IAAG;MAChB,IAAI,CAACC,iBAAiB,CAACQ,IAAI,CAACT,IAAI,CAAC;MACjC,IAAI,CAACQ,kBAAkB,GAAG;QAAEd,iBAAiB,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAE,CAAC,CAAC;IAChE,CAAC,CAAC;EACN;;EAEAe,qBAAqB,CAACP,EAAU,EAAEQ,eAAgC;IAChE,IAAI,CAAClB,IAAI,CAACmB,GAAG,CAAC,oBAAoBT,EAAE,EAAE,EAAEQ,eAAe,CAAC,CACrDZ,SAAS,CAAC,MAAK;MACd;IAAA,CACD,CAAC;EACN;;AAnCWR,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRrC3B,2BAAK;MACCA,kCAAkB;MAAAA,iBAAK;MAG3BA,yEAEM;MAGNA,0BAAI;MACFA,uEAEK;MACPA,iBAAK;MAGLA,2BAAK;MACCA,wCAAwB;MAAAA,iBAAK;MACjCA,+BAAwC;MAAlCA;QAAA,OAAY4B,wBAAoB;MAAA,EAAC;MACrC5B,iCAAkB;MAAAA,sBAAK;MAAAA,iBAAQ;MAC/BA,iCAAwF;MAA/CA;QAAA;MAAA,EAAqC;MAA9EA,iBAAwF;MACxFA,kCAAsB;MAAAA,6BAAY;MAAAA,iBAAS;;;MAjBzCA,eAAoB;MAApBA,yCAAoB;MAMCA,eAAoB;MAApBA,+CAAoB;MAUFA,eAAqC;MAArCA,qDAAqC","names":["i0","SubjectCategoryComponent","constructor","http","subjectCategoryId","name","ngOnInit","getSubjectCategories","get","subscribe","data","subjectCategories","getSubjectCategory","id","console","log","addSubjectCategory","post","newSubjectCategory","push","updateSubjectCategory","subjectCategory","put","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\FizikUm\\FizikUm\\FizikUm\\ClientApp\\src\\app\\subject-category\\subject-category.component.html","D:\\FizikUm\\FizikUm\\FizikUm\\ClientApp\\src\\app\\subject-category\\subject-category.component.ts"],"sourcesContent":["<div>\n  <h2>Subject Categories</h2>\n\n  <!-- Display Success Message -->\n  <div *ngIf=\"successMessage\" class=\"success-message\">\n    {{ successMessage }}\n  </div>\n\n  <!-- Display Subject Categories -->\n  <ul>\n    <li *ngFor=\"let category of subjectCategories\">\n      {{ category.name }}\n    </li>\n  </ul>\n\n  <!-- Add New Subject Category Form -->\n  <div>\n    <h3>Add New Subject Category</h3>\n    <form (ngSubmit)=\"addSubjectCategory()\">\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"newSubjectCategory.name\" required>\n      <button type=\"submit\">Add Category</button>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-subject-category',\n  templateUrl: './subject-category.component.html',\n  styleUrls: ['./subject-category.component.css']\n})\nexport class SubjectCategoryComponent implements OnInit {\n\n  subjectCategories: SubjectCategory[] = [];\n  newSubjectCategory: SubjectCategory = { subjectCategoryId: 0, name: '' };\n  successMessage: string = '';\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getSubjectCategories();\n  }\n\n  getSubjectCategories() {\n    this.http.get<SubjectCategory[]>('/subjectcategory')\n      .subscribe(data => this.subjectCategories = data);\n  }\n\n  getSubjectCategory(id: number) {\n    this.http.get<SubjectCategory>(`/subjectcategory/${id}`)\n      .subscribe(data => console.log(data)); // Handle the data as needed\n  }\n\n  addSubjectCategory() {\n    this.http.post<SubjectCategory>('/subjectcategory', this.newSubjectCategory)\n      .subscribe(data => {\n        this.subjectCategories.push(data);\n        this.newSubjectCategory = { subjectCategoryId: 0, name: '' }; // Reinitialize for the next entry\n      });\n  }\n\n  updateSubjectCategory(id: number, subjectCategory: SubjectCategory) {\n    this.http.put(`/subjectcategory/${id}`, subjectCategory)\n      .subscribe(() => {\n        // Handle success, if needed\n      });\n  }\n}\n\ninterface SubjectCategory {\n  subjectCategoryId: number;\n  name: string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}