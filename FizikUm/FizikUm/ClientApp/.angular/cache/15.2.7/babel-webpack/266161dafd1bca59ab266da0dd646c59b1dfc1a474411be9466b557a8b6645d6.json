{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction SubjectCategoryComponent_div_7_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.successMessage, \" \");\n  }\n}\nfunction SubjectCategoryComponent_div_7_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r5.name, \" \");\n  }\n}\nfunction SubjectCategoryComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Index Subject Category View\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"h2\");\n    i0.ɵɵtext(4, \"Subject Categories\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \" Display Success Message \");\n    i0.ɵɵtemplate(6, SubjectCategoryComponent_div_7_div_6_Template, 2, 1, \"div\", 2);\n    i0.ɵɵtext(7, \" Display Subject Categories \");\n    i0.ɵɵelementStart(8, \"ul\");\n    i0.ɵɵtemplate(9, SubjectCategoryComponent_div_7_li_9_Template, 2, 1, \"li\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.successMessage);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.subjectCategories);\n  }\n}\nfunction SubjectCategoryComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Create Subject Category View\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" Add New Subject Category Form \");\n    i0.ɵɵelementStart(4, \"div\")(5, \"h3\");\n    i0.ɵɵtext(6, \"Add New Subject Category\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function SubjectCategoryComponent_div_8_Template_form_ngSubmit_7_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.addSubjectCategory());\n    });\n    i0.ɵɵelementStart(8, \"label\", 6);\n    i0.ɵɵtext(9, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"input\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function SubjectCategoryComponent_div_8_Template_input_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.newSubjectCategory.name = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 8);\n    i0.ɵɵtext(12, \"Add Category\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.newSubjectCategory.name);\n  }\n}\nfunction SubjectCategoryComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Edit Subject Category View\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class SubjectCategoryComponent {\n  constructor(http) {\n    this.http = http;\n    this.subjectCategories = [];\n    this.newSubjectCategory = {\n      subjectCategoryId: 0,\n      name: ''\n    };\n    this.successMessage = '';\n    this.currentView = 'index';\n    this.apiUrl = 'https://localhost:7175/SubjectCategory/api/';\n  }\n  ngOnInit() {\n    this.getSubjectCategories();\n  }\n  showView(view) {\n    this.currentView = view;\n  }\n  getSubjectCategories() {\n    this.http.get(`${this.apiUrl}GetSubjectCategory`).subscribe(data => this.subjectCategories = data);\n  }\n  getSubjectCategory(id) {\n    this.http.get(`${this.apiUrl}GetSubjectCategory/${id}`).subscribe(data => console.log(data));\n  }\n  addSubjectCategory() {\n    this.http.post(`${this.apiUrl}PostSubjectCategory`, this.newSubjectCategory).subscribe(data => {\n      this.subjectCategories.push(data);\n      this.newSubjectCategory = {\n        subjectCategoryId: 0,\n        name: ''\n      };\n      this.successMessage = 'Subject category added successfully!';\n    }, error => {\n      console.error('Error adding subject category:', error);\n    });\n  }\n  updateSubjectCategory(id, subjectCategory) {\n    this.http.put(`${this.apiUrl}PutSubjectCategory/${id}`, subjectCategory).subscribe(() => {\n      this.successMessage = 'Subject category updated successfully!';\n    });\n  }\n}\nSubjectCategoryComponent.ɵfac = function SubjectCategoryComponent_Factory(t) {\n  return new (t || SubjectCategoryComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nSubjectCategoryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SubjectCategoryComponent,\n  selectors: [[\"app-subject-category\"]],\n  decls: 10,\n  vars: 3,\n  consts: [[3, \"click\"], [4, \"ngIf\"], [\"class\", \"success-message\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"success-message\"], [3, \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function SubjectCategoryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nav\")(1, \"a\", 0);\n      i0.ɵɵlistener(\"click\", function SubjectCategoryComponent_Template_a_click_1_listener() {\n        return ctx.showView(\"index\");\n      });\n      i0.ɵɵtext(2, \"Index\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"a\", 0);\n      i0.ɵɵlistener(\"click\", function SubjectCategoryComponent_Template_a_click_3_listener() {\n        return ctx.showView(\"create\");\n      });\n      i0.ɵɵtext(4, \"Create\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"a\", 0);\n      i0.ɵɵlistener(\"click\", function SubjectCategoryComponent_Template_a_click_5_listener() {\n        return ctx.showView(\"edit\");\n      });\n      i0.ɵɵtext(6, \"Edit\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(7, SubjectCategoryComponent_div_7_Template, 10, 2, \"div\", 1);\n      i0.ɵɵtemplate(8, SubjectCategoryComponent_div_8_Template, 13, 1, \"div\", 1);\n      i0.ɵɵtemplate(9, SubjectCategoryComponent_div_9_Template, 3, 0, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.currentView === \"index\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.currentView === \"create\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.currentView === \"edit\");\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","SubjectCategoryComponent","constructor","http","subjectCategoryId","name","ngOnInit","getSubjectCategories","showView","view","currentView","get","apiUrl","subscribe","data","subjectCategories","getSubjectCategory","id","console","log","addSubjectCategory","post","newSubjectCategory","push","successMessage","error","updateSubjectCategory","subjectCategory","put","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\FizikUm\\FizikUm\\FizikUm\\ClientApp\\src\\app\\subject-category\\subject-category.component.html","D:\\FizikUm\\FizikUm\\FizikUm\\ClientApp\\src\\app\\subject-category\\subject-category.component.ts"],"sourcesContent":["\n<nav>\n  <a (click)=\"showView('index')\">Index</a>\n  <a (click)=\"showView('create')\">Create</a>\n  <a (click)=\"showView('edit')\">Edit</a>\n</nav>\n\n<div *ngIf=\"currentView === 'index'\">\n  <p>Index Subject Category View</p>\n  <h2>Subject Categories</h2>\n\n  Display Success Message\n  <div *ngIf=\"successMessage\" class=\"success-message\">\n    {{ successMessage }}\n  </div>\n\n  Display Subject Categories\n  <ul>\n    <li *ngFor=\"let category of subjectCategories\">\n      {{ category.name }}\n    </li>\n  </ul>\n</div>\n\n<div *ngIf=\"currentView === 'create'\">\n  <p>Create Subject Category View</p>\n  Add New Subject Category Form\n  <div>\n    <h3>Add New Subject Category</h3>\n    <form (ngSubmit)=\"addSubjectCategory()\">\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"newSubjectCategory.name\" required>\n      <button type=\"submit\">Add Category</button>\n    </form>\n  </div>\n</div>\n\n<div *ngIf=\"currentView === 'edit'\">\n  <p>Edit Subject Category View</p>\n \n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-subject-category',\n  templateUrl: './subject-category.component.html',\n  styleUrls: ['./subject-category.component.css']\n})\nexport class SubjectCategoryComponent implements OnInit {\n\n  subjectCategories: SubjectCategory[] = [];\n  newSubjectCategory: SubjectCategory = { subjectCategoryId: 0, name: '' };\n  successMessage: string = '';\n  currentView: string = 'index';\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getSubjectCategories();\n  }\n  showView(view: string) {\n    this.currentView = view;\n  }\n  private apiUrl = 'https://localhost:7175/SubjectCategory/api/';\n\n  getSubjectCategories() {\n    this.http.get<SubjectCategory[]>(`${this.apiUrl}GetSubjectCategory`)\n      .subscribe(data => this.subjectCategories = data);\n  }\n\n  getSubjectCategory(id: number) {\n    this.http.get<SubjectCategory>(`${this.apiUrl}GetSubjectCategory/${id}`)\n      .subscribe(data => console.log(data));\n  }\n\n  addSubjectCategory() {\n    this.http.post<SubjectCategory>(`${this.apiUrl}PostSubjectCategory`, this.newSubjectCategory)\n      .subscribe(\n        data => {\n          this.subjectCategories.push(data);\n          this.newSubjectCategory = { subjectCategoryId: 0, name: '' };\n          this.successMessage = 'Subject category added successfully!';\n        },\n        error => {\n          console.error('Error adding subject category:', error);\n        }\n      );\n  }\n\n  updateSubjectCategory(id: number, subjectCategory: SubjectCategory) {\n    this.http.put(`${this.apiUrl}PutSubjectCategory/${id}`, subjectCategory)\n      .subscribe(() => {\n        this.successMessage = 'Subject category updated successfully!';\n      });\n  }\n\n}\n\ninterface SubjectCategory {\n  subjectCategoryId: number;\n  name: string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}