{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Pipe } from '@angular/core';\nimport { take } from 'rxjs/operators';\nlet FilterByClassroomIdPipe = class FilterByClassroomIdPipe {\n  transform(resources, classroomId) {\n    return resources.filter(resource => resource.classroomId === classroomId);\n  }\n};\nFilterByClassroomIdPipe = __decorate([Component({\n  selector: 'app-resource',\n  templateUrl: './resource.component.html',\n  styleUrls: ['./resource.component.css']\n}), Pipe({\n  name: 'filterByClassroomId'\n})], FilterByClassroomIdPipe);\nexport { FilterByClassroomIdPipe };\nexport class ResourceComponent {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.resources = [];\n    this.classrooms = [];\n    this.newResource = this.getEmptyResource();\n    // Add the selectedResource property\n    this.selectedResource = null;\n    this.currentView = 'index';\n    this.apiUrl = 'https://localhost:7175/Resource/api/';\n  }\n  ngOnInit() {\n    this.getResources();\n    this.getClassrooms();\n  }\n  getClassrooms() {\n    // Fetch the list of existing classrooms from your API\n    this.http.get(`https://localhost:7175/Classroom/api/GetClassroom`).subscribe(result => this.classrooms = result, error => console.error('Error fetching classrooms:', error));\n  }\n  showView(view, resource) {\n    this.currentView = view;\n    if (view === 'index') {\n      this.getResources();\n    }\n    if (view === 'edit' && resource) {\n      this.selectedResource = {\n        ...resource\n      };\n    }\n  }\n  getResources() {\n    this.http.get(`${this.apiUrl}GetResources`).subscribe(result => this.resources = result, error => console.error('Error fetching resources:', error));\n  }\n  addResource() {\n    this.authService.getUser().pipe(take(1)).subscribe(user => {\n      this.newResource.createdBy = user?.name ?? null;\n      const selectedClassroomId = this.newResource.selectedClassroomId;\n      // Find the selected classroom based on selectedClassroomId\n      const selectedClassroom = this.classrooms.find(c => c.id === selectedClassroomId);\n      if (selectedClassroom) {\n        // Set the classroomId to the selected classroom's id\n        this.newResource.classroomId = selectedClassroom.id;\n        console.log('Selected Classroom ID:', this.newResource.selectedClassroomId);\n        this.http.post(`${this.apiUrl}PostResource`, this.newResource).subscribe(result => {\n          result.classroomId = selectedClassroom.id;\n          this.resources.push(result);\n          this.resetNewResource();\n        }, error => console.error('Error adding resource:', error));\n      } else {\n        console.error('Selected classroom not found');\n      }\n    }, error => console.error('Error fetching user:', error));\n  }\n  updateResource(id, Resource) {\n    this.http.put(`${this.apiUrl}PutResource/${id}`, Resource).subscribe(() => {}, error => console.error('Error updating resource:', error));\n  }\n  deleteResource(id) {\n    if (id === undefined) {\n      return;\n    }\n    this.http.delete(`${this.apiUrl}DeleteResource/${id}`).subscribe(() => {\n      this.resources = this.resources.filter(r => r.id !== id);\n    }, error => console.error('Error deleting resource:', error));\n  }\n  resetNewResource() {\n    this.newResource = this.getEmptyResource();\n  }\n  getEmptyResource() {\n    return {\n      id: 0,\n      name: '',\n      description: '',\n      classroomId: 0,\n      code: '',\n      createdBy: ''\n    };\n  }\n}\nvar Subject;\n(function (Subject) {\n  Subject[Subject[\"Physics\"] = 0] = \"Physics\";\n  Subject[Subject[\"Biology\"] = 1] = \"Biology\";\n  Subject[Subject[\"Chemistry\"] = 2] = \"Chemistry\";\n})(Subject || (Subject = {}));","map":{"version":3,"mappings":"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","names":["Component","Pipe","take","FilterByClassroomIdPipe","transform","resources","classroomId","filter","resource","selector","templateUrl","styleUrls","name","ResourceComponent","constructor","http","authService","getEmptyResource","ngOnInit","getResources","getClassrooms","get","subscribe","result","classrooms","error","console","showView","view","currentView","selectedResource","apiUrl","addResource","getUser","pipe","user","newResource","createdBy","selectedClassroomId","selectedClassroom","find","c","id","log","post","push","resetNewResource","updateResource","Resource","put","deleteResource","undefined","delete","r","description","code","Subject"],"sourceRoot":"","sources":["D:\\FizikUm\\FizikUm\\FizikUm\\ClientApp\\src\\app\\resource\\resource.component.ts"],"sourcesContent":["import { Component, OnInit, Pipe, PipeTransform } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthorizeService } from 'D:/FizikUm/FizikUm/FizikUm/ClientApp/src/api-authorization/authorize.service';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-resource',\n  templateUrl: './resource.component.html',\n  styleUrls: ['./resource.component.css']\n})\n  @Pipe({\n    name: 'filterByClassroomId'\n  })\nexport class FilterByClassroomIdPipe implements PipeTransform {\n  transform(resources: Resource[], classroomId: number): Resource[] {\n    return resources.filter(resource => resource.classroomId === classroomId);\n  }\n}\nexport class ResourceComponent implements OnInit {\n  public resources: Resource[] = [];\n  public classrooms: Classroom[] = [];\n  public newResource: Resource = this.getEmptyResource();\n\n  // Add the selectedResource property\n  public selectedResource: Resource | null = null;\n\n  currentView: string = 'index';\n\n  constructor(private http: HttpClient, private authService: AuthorizeService) { }\n\n  ngOnInit(): void {\n    this.getResources();\n    this.getClassrooms();\n  }\n\n  getClassrooms() {\n    // Fetch the list of existing classrooms from your API\n    this.http.get<Classroom[]>(`https://localhost:7175/Classroom/api/GetClassroom`).subscribe(\n      result => this.classrooms = result,\n      error => console.error('Error fetching classrooms:', error)\n    );\n  }\n\n  showView(view: string, resource?: Resource) {\n    this.currentView = view;\n\n    if (view === 'index') {\n      this.getResources();\n    }\n\n    if (view === 'edit' && resource) {\n      this.selectedResource = { ...resource };\n    }\n  }\n\n  private apiUrl = 'https://localhost:7175/Resource/api/';\n\n  getResources() {\n    this.http.get<Resource[]>(`${this.apiUrl}GetResources`).subscribe(\n      result => this.resources = result,\n      error => console.error('Error fetching resources:', error)\n    );\n  }\n\n  addResource() {\n    this.authService.getUser().pipe(take(1)).subscribe(\n      user => {\n        this.newResource.createdBy = user?.name ?? null;\n       \n        const selectedClassroomId = this.newResource.selectedClassroomId;\n\n        // Find the selected classroom based on selectedClassroomId\n        const selectedClassroom = this.classrooms.find(c => c.id === selectedClassroomId);\n\n        if (selectedClassroom) {\n          // Set the classroomId to the selected classroom's id\n          this.newResource.classroomId = selectedClassroom.id;\n          console.log('Selected Classroom ID:', this.newResource.selectedClassroomId);\n\n          this.http.post<Resource>(`${this.apiUrl}PostResource`, this.newResource).subscribe(\n            result => {\n              result.classroomId = selectedClassroom.id;\n              this.resources.push(result);\n              this.resetNewResource();\n            },\n            error => console.error('Error adding resource:', error)\n          );\n        } else {\n          console.error('Selected classroom not found');\n        }\n      },\n      error => console.error('Error fetching user:', error)\n    );\n  }\n\n  updateResource(id: number, Resource: Resource) {\n    this.http.put(`${this.apiUrl}PutResource/${id}`, Resource).subscribe(\n      () => {\n      },\n      error => console.error('Error updating resource:', error)\n    );\n  }\n\n  deleteResource(id: number | undefined) {\n    if (id === undefined) {   \n      return;\n    }\n\n    this.http.delete(`${this.apiUrl}DeleteResource/${id}`).subscribe(\n      () => {\n        this.resources = this.resources.filter(r => r.id !== id);\n      },\n      error => console.error('Error deleting resource:', error)\n    );\n  }\n\n  private resetNewResource() {\n    this.newResource = this.getEmptyResource();\n  }\n\n  private getEmptyResource(): Resource {\n    return {\n      id: 0,\n      name: '',\n      description: '',\n      classroomId: 0,\n      code: '',\n      createdBy: ''\n    };\n  }\n}\n\ninterface Resource {\n  id: number;\n  name: string;\n  description: string;\n  code: string;\n  classroomId: number;\n  createdBy: string | null;\n  selectedClassroomId?: number;\n}\n\nenum Subject {\n  Physics = 0,\n  Biology = 1,\n  Chemistry = 2,\n}\n\ninterface Classroom {\n  id: number;\n  name: string;\n  subject: Subject;\n  teacher: string | null;\n  resources: Resource[];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}