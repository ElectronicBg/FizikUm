{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ResourceComponent {\n  constructor(http, baseUrl) {\n    this.resources = [];\n    http.get(baseUrl + 'resource').subscribe(result => {\n      this.resources = result;\n    }, error => console.error(error));\n  }\n}\nResourceComponent.ɵfac = function ResourceComponent_Factory(t) {\n  return new (t || ResourceComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nResourceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ResourceComponent,\n  selectors: [[\"app-resource\"]],\n  decls: 2,\n  vars: 0,\n  template: function ResourceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"resource works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,iBAAiB;EAG5BC,YAAYC,IAAgB,EAAsBC,OAAe;IAF1D,cAAS,GAAe,EAAE;IAG/BD,IAAI,CAACE,GAAG,CAAaD,OAAO,GAAG,UAAU,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MAC5D,IAAI,CAACC,SAAS,GAAGD,MAAM;IACzB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AAPWR,iBAAiB;mBAAjBA,iBAAiB,4DAGU,UAAU;AAAA;AAHrCA,iBAAiB;QAAjBA,iBAAiB;EAAAU;EAAAC;EAAAC;EAAAC;IAAA;MCP9BC,yBAAG;MAAAA,+BAAe;MAAAA,iBAAI","names":["ResourceComponent","constructor","http","baseUrl","get","subscribe","result","resources","error","console","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["D:\\FizikUm\\FizikUm\\FizikUm\\ClientApp\\src\\app\\resource\\resource.component.ts","D:\\FizikUm\\FizikUm\\FizikUm\\ClientApp\\src\\app\\resource\\resource.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-resource',\n  templateUrl: './resource.component.html'\n})\nexport class ResourceComponent {\n  public resources: Resource[] = [];\n\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\n    http.get<Resource[]>(baseUrl + 'resource').subscribe(result => {\n      this.resources = result;\n    }, error => console.error(error));\n  }\n}\n\ninterface Resource {\n  resourceId: number;\n  name: string;\n  description: string;\n  subjectCategory: SubjectCategory;\n  classroomId: number;\n  classroom: Classroom;\n  code: string;\n}\n\ninterface SubjectCategory {\n  subjectCategoryId: number;\n  name: string;\n}\n\ninterface Classroom {\n  classroomId: number;\n  subjectCategoryId: number;\n  subjectCategory: SubjectCategory;\n  resources: Resource[];\n}\n","<p>resource works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}